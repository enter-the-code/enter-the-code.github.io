{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/react_7/",
    "result": {"data":{"markdownRemark":{"excerpt":"JSX JSX 란? 자바스크립트의 js와 xml의 x를 따와서 붙인말이다.\n자바스크립트 코드 안에서 바로 태그기반의 구문을 써서 리엑트 엘리먼트를 정의할수 있게 해주는 자바스크립트 확장이다.\n예를 들어 이런 html태그 들이 있고 이들의 할일은 정해져있다.\n하지만 JSX…","html":"<h1>JSX</h1>\n<p>JSX 란?</p>\n<p>자바스크립트의 js와 xml의 x를 따와서 붙인말이다.\n자바스크립트 코드 안에서 바로 태그기반의 구문을 써서 리엑트 엘리먼트를 정의할수 있게 해주는 자바스크립트 확장이다.\n예를 들어</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>br<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>br<span class=\"token operator\">></span></code></pre></div>\n<p>이런 html태그 들이 있고 이들의 할일은 정해져있다.\n하지만 JSX에서는 직접 컴포넌트를 정의해서 태그 형식으로 쓸수 있도록 만들어준다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>example<span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>이런식으로 사용이 가능해진다 앞서 봤던 element를 만드는 지져분한 코드를 사용하지않고 정의하고\n태그형식으로 편하게 사용할수 있도록 만들어 준다.\n</br>\n그리고 jsx에서 컴포넌트에게 프로퍼티 값을로(편하게 매개변수) 자바스크립트 값을 넘기려면 자바스크립트 식(’{}‘)을 꼭 사용해야 한다.\n중괄호를 꼭 감싸 줘야 한다는 것이다.</p>\n</br>\n그리고 jsx는 다른게 아니라 자바스크립트이기 때문에 함수안에서 직접 jsx를 사용할수 있다.\n예를 들어 아까 위에서 말했듯이 프로퍼티 값으로 자바스크립트 값을 넘기려면 중괄호로 감싸야 된다고 했고\n중괄호 안에 자바스크립트 식을 사용하여 엘리먼트로 바꿔줘서 값을 쓰거나 넘겨줄수 있다.\n</br>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ex<span class=\"token punctuation\">,</span>i</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span>\n    <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>example_child<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>\n</br>\n아래와 같은 예시를 사용할수 있다는 것이다.\n</br>\n그리고 jsx는 브라우저가 해석하지 못한다는 점이 단점이라 순수 리엑트로 바꾸어 줘야한다.\n더이상의 특징이 없을 정도로 잘게 쪼개주는것도 해야한다.\n</br>\n예시같은경우 모든 코드를 적지않고 아래처럼 컴포넌트를 나누어서 의존적으로 서로를 부르고 사용하는 간단한 예시를 아래에 적겠다.\n<p>그리고 하나가 무수히 많은 일을 하는 바람에 코드가 기하급수적으로 길어지는것은 좋은 현상이 아니기에 컴포넌트를 더 잘게 더이상\n쪼개지지 못하도록 나누어 주는것이 좋다. 그것을 리엑트 프래그먼트 라고 한다.</p>\n<h1>리엑트 프래그먼트(fragment)</h1>\n</br>\n주의!) 리엑트는 둘이상의 태그를 그저 병렬적으로 사용할수 없기에 태그로 그 병렬적인 태그들을 감싸 div같은 애들로 감싸 줘야하는데\n이러면 의미없는 div들의 난발이 생길것이 뻔하다 그래서 나타난 것이 fragment태그다.\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>React<span class=\"token punctuation\">.</span>Fragment<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>태그<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>태그<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>태그<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>React<span class=\"token punctuation\">.</span>fragment<span class=\"token operator\">></span></code></pre></div>\n<p>이래놓고 dom을 살펴보면 div로 깔끔하게 바뀌어져 있따.</p>\n<h1>프로젝트 설정하고 만들어 보기</h1>\n<p>원래는 webpack도 깔아주고 관한한 모듈들도 깔아주고 의존성관리(pakage.json)도 설정해주고\n바벨을 사용하는 빌드도 설정해주고 할것이 많고 이해해야하는 것들도 정말 많다.\n그리고 책을 보면 진짜로 어지럽고 정리할것이 많다.</p>\n<p>존나 복잡하고 귀찮아서 프로젝트 만들기 빡세서 걍 접어버리는 안타까운 사태를 방지하기위해\n리엑트 개발자들을 위한 강력한 도구가 있는데 그것이 바로</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">create-react-app</code></pre></div>\n<p>이라는 명령어이다.</p>\n<p>콘솔에 저명령어를 치고 뒤에 위치만 설정해주면 위의 모든 셋팅들을 자동으로 깔끔하게 해주어서\n딱히 추가적으로 뭔가 할거 아니면 설정해줄필요가 없다.</p>\n<p>심지어 pakage.json에 스크립트도 다 깔끔하게 정의 돼어 있어서\n실행 할때고 yarn 혹은 npm run 혹은 build등으로 간편히 사용할수 있다.</p>","frontmatter":{"title":"JSX","tags":["react"],"date":"July 03, 2022","description":null,"social_image":null}},"prev":{"frontmatter":{"title":"1080 행렬"},"fields":{"slug":"/blog/1080-행렬/"}},"next":{"frontmatter":{"title":"리엑트 작동 원리"},"fields":{"slug":"/blog/react_6/"}}},"pageContext":{"slug":"/blog/react_7/","prevSlug":"/blog/1080-행렬/","nextSlug":"/blog/react_6/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}