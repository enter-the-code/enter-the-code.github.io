{
    "componentChunkName": "component---src-templates-post-template-js",
    "path": "/blog/2110-공유기설치/",
    "result": {"data":{"markdownRemark":{"excerpt":"문제 해설 소스 코드","html":"<h2>문제</h2>\n</br>\n<h2>해설</h2>\n</br>\n문제의 핵심은 이분탐색에 있다. 하지만 어떤것을 기준으로 이분탐색을 할지가 가장 의문일것이다. 여기서 가장 합리적인 이분탐색기준은 (거리,인덱스,공유기 개수) 이 3가지다\n먼저 인덱스는 기준이 될수있다 하지만 인덱스를 기준으로 할바엔 거리를 인덱스로 하는편이 \n더욱 코드를 줄일수 있다. 그러면 공유기 갯수는? 기준이 되지못한다. 공유기는 총 3개를 다\n설치해야하며 거기에 따른 기준이 없기 때문이다. 그럼 그럼에 따라 거리가 기준이 되는데\n어떤 기준이냐? 바로 사이거리의 최솟값 최댓값이다. 이둘을 left,right로 두고 이분탐색을\n시작해 짧은거리중 가장큰것을 골라 낼수 있다.\n</br>\n<h2>소스 코드</h2>\n</br>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n\nvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> arr<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> wifi_num<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    cin<span class=\"token operator\">>></span>x<span class=\"token operator\">>></span>wifi_num<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>x<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        cin<span class=\"token operator\">>></span>a<span class=\"token punctuation\">;</span>\n        arr<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">&lt;=</span>r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> mid<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>l<span class=\"token operator\">+</span>r<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> gujum<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> wifi<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>gujum<span class=\"token operator\">>=</span>mid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                wifi<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                gujum<span class=\"token operator\">=</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wifi<span class=\"token operator\">>=</span>wifi_num<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            result<span class=\"token operator\">=</span>mid<span class=\"token punctuation\">;</span>\n            l<span class=\"token operator\">=</span>mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            r<span class=\"token operator\">=</span>mid<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n    <span class=\"token punctuation\">}</span>\n    \n    cout<span class=\"token operator\">&lt;&lt;</span>result<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</br>","frontmatter":{"title":"2110 공유기 설치","tags":["Problem sloving"],"date":"September 06, 2022","description":"소스코드와 해설입니다.","social_image":{"absolutePath":"/Users/song-giyeong/enter-the-code.github.io/static/media/2110_문제.png"}}},"prev":null,"next":{"frontmatter":{"title":"깃 사용법"},"fields":{"slug":"/blog/git/"}}},"pageContext":{"slug":"/blog/2110-공유기설치/","prevSlug":null,"nextSlug":"/blog/git/"}},
    "staticQueryHashes": ["2555585279","2714594843","3159585216"]}